@inject NavigationManager _nav
@inject IDialogService _diag
@using DoreanStore.Components.Apps
@using System.Diagnostics;

@if(App.IconUrl is not null)
{
    string imageUrl = LinkProvider.RepoLink + App.IconUrl;
    <MudCard @onclick="OpenDialogAsync" Elevation="4" Style="max-width:100px;min-width:100px; min-height:143px;border-style: solid; border-width:1px;border-color:#5394fd">
        <MudCardMedia Image="@imageUrl" Height="60" />
        <MudCardContent>
            @if (App.DisplayName is not null)
            {
                @if (App.DisplayName.Length > 10)
                {
                    <MudText Style="font-size:10px">@App.DisplayName.Substring(0, 10) ..</MudText>
                }
                else
                {
                    <MudText Style="font-size:10px">@App.DisplayName</MudText>

                }
            }
            
            @if(App.Summary is not null)
            {
                @if(App.Summary.Length > 31)
                {
                    <MudText Style="font-size:8px">@App.Summary.Substring(0, 31)..</MudText>
                }
                else
                {
                    <MudText Style="font-size:8px">@App.Summary</MudText>

                }
            }
        </MudCardContent>
    </MudCard>
    @if (downloading && ApplicationState.DownloadClient.downloadUrl == appLink)
    {
        <div>DOWNLOADING THIS BITCH.</div>
    }
}

@code {
    [Parameter]
    public ApplicationInfo App{ get; set; }
    public string appLink = string.Empty;
    private readonly DialogOptions _fullScreen = new() { FullScreen = true, CloseButton = true };
    bool downloading = false;

    protected override void OnInitialized()
    {
        // ApplicationState.ProgressEvent += (totalFileSize, totalBytesDownloaded, progressPercentage) =>
        // {
        //     Debug.WriteLine("Hello from AppCard");
        //     downloading = true;
        //     InvokeAsync(StateHasChanged);
        // };
        appLink = $"/App/{App.UniqueName}";
    }
    private Task OpenDialogAsync()
    {
        var parameters = new DialogParameters<AppPage>
        {
            { x => x.App, App}
        };

        return _diag.ShowAsync<AppPage>("Simple Dialog", parameters, _fullScreen);
    }
}
